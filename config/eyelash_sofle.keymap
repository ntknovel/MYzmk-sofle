#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        WORD {
            bindings = <
&kp GRAVE   &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8         &kp N9   &kp N0     &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I          &kp O    &kp P      &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K          &kp L    &kp SEMI   &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA      &kp DOT  &kp FSLH   &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp ENTER    &kp RIGHT_GUI    &kp SPACE  &mo 1   &kp RIGHT_ALT  &mo 2    &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "WORD";
        };

        BTMSRGB {
            bindings = <
&kp ESCAPE        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &mmv MOVE_UP     &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &kp F11
&kp LEFT_BRACKET  &trans        &trans        &mkp MB4      &trans        &trans            &mmv MOVE_DOWN   &kp F12          &trans           &kp UP           &trans           &trans           &kp RIGHT_BRACKET
&kp MINUS         &trans        &mkp LCLK     &mkp MB5      &mkp RCLK     &trans            &mmv MOVE_LEFT   &trans           &kp LEFT         &kp DOWN         &kp RIGHT        &trans           &kp EQUAL
&bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL    &mmv MOVE_RIGHT  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_TOG
&kp C_PLAY_PAUSE  &trans        &trans        &trans        &trans        &trans            &mkp MCLK        &trans           &trans           &trans           &trans           &trans
            >;

            display-name = "BTMSRGB";
            sensor-bindings = <&scroll_encoder>;
        };

        BTLD {
            bindings = <
&trans        &trans  &trans  &trans  &trans  &bootloader    &mmv MOVE_UP     &bootloader  &trans  &trans  &trans  &trans  &soft_off
&trans        &trans  &trans  &trans  &trans  &trans         &mmv MOVE_DOWN   &trans       &trans  &trans  &trans  &trans  &trans
&trans        &trans  &trans  &trans  &trans  &trans         &mmv MOVE_LEFT   &trans       &trans  &trans  &trans  &trans  &trans
&out OUT_BLE  &trans  &trans  &trans  &trans  &sys_reset     &mmv MOVE_RIGHT  &sys_reset   &trans  &trans  &trans  &trans  &out OUT_USB
&trans        &trans  &trans  &trans  &trans  &trans         &mkp LCLK        &trans       &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
